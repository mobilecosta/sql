-- Apresenta endereçamentos em duplicidade
SELECT SDB.DB_FILIAL, SDB.DB_PRODUTO, SDB.DB_LOCAL, SDB.DB_LOCALIZ, SDB.DB_LOTECTL, SDB.DB_QUANT, COUNT(*) AS QTDE,
       MIN(SB2.B2_QATU) AS B2_QATU, MIN(SBF.BF_QUANT) AS BF_QUANT, MIN(SBF.BF_QUANT) - MIN(SB2.B2_QATU) AS SALDO,
       SDB.DB_QUANT * (COUNT(*) - 1) AS CONFERENCIA, MIN(SDB.R_E_C_N_O_) AS RECNO_SDB
  FROM SDB010 SDB
  LEFT JOIN SB2010 SB2 ON SB2.D_E_L_E_T_ = ' ' AND SB2.B2_FILIAL = SDB.DB_FILIAL AND SB2.B2_COD = SDB.DB_PRODUTO
   AND SB2.B2_LOCAL = SDB.DB_LOCAL
  LEFT JOIN (SELECT BF_FILIAL, BF_PRODUTO, BF_LOCAL, SUM(BF_QUANT) AS BF_QUANT
               FROM SBF010
              WHERE D_E_L_E_T_ = ' ' AND BF_QUANT > 0
           GROUP BY BF_FILIAL, BF_PRODUTO, BF_LOCAL) SBF ON SBF.BF_FILIAL = SB2.B2_FILIAL AND SBF.BF_PRODUTO = SB2.B2_COD
   AND SBF.BF_LOCAL = SB2.B2_LOCAL
 WHERE SDB.D_E_L_E_T_ = ' ' AND SDB.DB_DOC = '20140106' AND SDB.DB_LOCALIZ = 'DESCARTE' AND SDB.DB_ORIGEM = 'ACE'
 GROUP BY DB_FILIAL, DB_PRODUTO, DB_LOCAL, DB_LOCALIZ, DB_QUANT, DB_LOTECTL
HAVING COUNT(*) > 1
 ORDER BY DB_FILIAL, DB_PRODUTO, DB_LOCAL, DB_LOCALIZ, DB_QUANT, DB_LOTECTL;

-- Remove duplicidade
UPDATE SDB010
   SET D_E_L_E_T_ = '*'
 WHERE R_E_C_N_O_ IN
 (
SELECT R_E_C_N_O_ FROM SDB010 SDB
 JOIN
(
SELECT SDB.DB_FILIAL, SDB.DB_PRODUTO, SDB.DB_LOCAL, SDB.DB_LOCALIZ, SDB.DB_LOTECTL, MIN(SDB.R_E_C_N_O_) AS RECNO_SDB
  FROM SDB010 SDB
 WHERE SDB.D_E_L_E_T_ = ' ' AND SDB.DB_DOC = '20140106' AND SDB.DB_LOCALIZ = 'DESCARTE' AND SDB.DB_ORIGEM = 'ACE'
 GROUP BY DB_FILIAL, DB_PRODUTO, DB_LOCAL, DB_LOCALIZ, DB_QUANT, DB_LOTECTL
HAVING COUNT(*) > 1
) SDBDEL ON SDBDEL.DB_FILIAL = SDB.DB_FILIAL AND SDBDEL.DB_PRODUTO = SDB.DB_PRODUTO AND SDBDEL.DB_LOCAL = SDB.DB_LOCAL
   AND SDBDEL.DB_LOCALIZ     = SDB.DB_LOCALIZ AND SDBDEL.DB_LOTECTL = SDB.DB_LOTECTL AND SDB.R_E_C_N_O_ <> SDBDEL.RECNO_SDB
 WHERE SDB.D_E_L_E_T_ = ' ' AND SDB.DB_DOC = '20140106' AND SDB.DB_LOCALIZ = 'DESCARTE' AND SDB.DB_ORIGEM = 'ACE'
);

-- Corrige o saldo
SELECT * INTO SBF010_CORRECAO FROM SBF010;

UPDATE SBF010
  SET BF_QUANT = SBF010.BF_QUANT - SBF.BF_AJUSTE
 FROM  
(
SELECT SDB.BF_AJUSTE, SBF.* FROM SBF010 SBF
JOIN (
SELECT DB_FILIAL, DB_PRODUTO, DB_LOCAL, DB_LOCALIZ, DB_LOTECTL, MIN(SBF.BF_QUANT) - MIN(SB2.B2_QATU) AS BF_AJUSTE
  FROM SDB010 SDB
  LEFT JOIN SB2010 SB2 ON SB2.D_E_L_E_T_ = ' ' AND SB2.B2_FILIAL = SDB.DB_FILIAL AND SB2.B2_COD = SDB.DB_PRODUTO
   AND SB2.B2_LOCAL = SDB.DB_LOCAL
  LEFT JOIN (SELECT BF_FILIAL, BF_PRODUTO, BF_LOCAL, SUM(BF_QUANT) AS BF_QUANT
               FROM SBF010
              WHERE D_E_L_E_T_ = ' ' AND BF_QUANT > 0
           GROUP BY BF_FILIAL, BF_PRODUTO, BF_LOCAL) SBF ON SBF.BF_FILIAL = SB2.B2_FILIAL AND SBF.BF_PRODUTO = SB2.B2_COD
   AND SBF.BF_LOCAL = SB2.B2_LOCAL
 WHERE SDB.D_E_L_E_T_ = '*' AND SDB.DB_DOC = '20140106' AND SDB.DB_LOCALIZ = 'DESCARTE' AND SDB.DB_ORIGEM = 'ACE'
   AND SB2.B2_QATU <> SBF.BF_QUANT
 GROUP BY DB_FILIAL, DB_PRODUTO, DB_LOCAL, DB_LOCALIZ, DB_QUANT, DB_LOTECTL
HAVING COUNT(*) > 1
) SDB ON SDB.DB_FILIAL = SBF.BF_FILIAL AND SDB.DB_PRODUTO = SBF.BF_PRODUTO AND SDB.DB_LOCAL = SBF.BF_LOCAL
  AND SDB.DB_LOCALIZ = SBF.BF_LOCALIZ  AND SDB.DB_LOTECTL = SBF.BF_LOTECTL
 WHERE SBF.D_E_L_E_T_ = ' ') SBF
 WHERE SBF010.D_E_L_E_T_ = ' ' AND SBF010.R_E_C_N_O_ = SBF.R_E_C_N_O_; 

SELECT * FROM SBF010 WHERE D_E_L_E_T_ = ' ' AND BF_EMPENHO > BF_QUANT;