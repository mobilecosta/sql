-- Deleta itens sem projeto
UPDATE ZZX010 SET D_E_L_E_T_ = '*' WHERE ZZX_PROJET = '';

-- Quantidade apontada nos empenhos
ALTER VIEW ZZX_EMPENHO AS 
SELECT ZZX_FILIAL, ZZX_PROJET, ZZX_PRODUT, ZZX_COD, SUM(ZZX_QTDE) ZZX_QTDE
  FROM ZZX010 ZZX
 WHERE D_E_L_E_T_= ' ' AND ZZX_FILIAL = '  '
 GROUP BY ZZX_FILIAL,ZZX_PROJET,ZZX_PRODUT, ZZX_COD
 
-- Quantidade totalizada nos projeto
ALTER VIEW AFA_EMPENHO AS
SELECT AFA.AFA_PROJET, AFC.AFC_XPROD, AFA.AFA_PRODUT, MIN(AFA.R_E_C_N_O_) AS AFA_RECNO, SUM(AFA.AFA_XQENTE) AS AFA_XQENTE
  FROM AFA010 AFA
  JOIN AF9010 AF9 ON AF9.D_E_L_E_T_ = ' ' AND AF9.AF9_FILIAL = AFA.AFA_FILIAL AND AF9.AF9_PROJET = AFA.AFA_PROJET
   AND AF9.AF9_REVISA = AFA.AFA_REVISA AND AF9.AF9_TAREFA = AFA.AFA_TAREFA
  JOIN AFC010 AFC ON AFC.D_E_L_E_T_ = ' ' AND AFC.AFC_FILIAL = AFA.AFA_FILIAL AND AFC.AFC_PROJET = AFA.AFA_PROJET
   AND AFC.AFC_EDT = AF9.AF9_EDTPAI AND AFC.AFC_XPROD <> ''
 WHERE AFA.D_E_L_E_T_ = ' '
 GROUP BY AFA.AFA_PROJET, AFC.AFC_XPROD, AFA.AFA_PRODUT
 
-- Requisição de itens existentes
SELECT ZZX.*
  FROM ZZX010 ZZX
  JOIN AFA_EMPENHO AFA ON AFA.AFA_PROJET = ZZX.ZZX_PROJET AND AFA.AFC_XPROD = ZZX.ZZX_PRODUT AND AFA.AFA_PRODUT = ZZX.ZZX_COD
 WHERE ZZX.D_E_L_E_T_ = ' '
 ORDER BY ZZX.ZZX_PROJET, ZZX.ZZX_PRODUT, ZZX.ZZX_COD;

-- 0. Backup
SELECT * INTO AFA010_BKP FROM AFA010;

-- 0. Diferença
SELECT SUM(ZZX_QTDE)
  FROM
(
SELECT ZZX.ZZX_PROJET, ZZX.ZZX_PRODUT, ZZX.ZZX_COD, ZZX.ZZX_QTDE, AFA.AFA_XQENTE
  FROM ZZX_EMPENHO ZZX
  LEFT JOIN AFA_EMPENHO AFA ON AFA.AFA_PROJET = ZZX.ZZX_PROJET AND ZZX.ZZX_PRODUT = AFA.AFC_XPROD
   AND ZZX.ZZX_COD = AFA.AFA_PRODUT
 WHERE ZZX.ZZX_QTDE <> COALESCE(AFA.AFA_XQENTE, 0)
 UNION 
SELECT AFA.AFA_PROJET, AFA.AFC_XPROD, AFA.AFA_PRODUT, AFA.AFA_XQENTE, ZZX.ZZX_QTDE
  FROM AFA_EMPENHO AFA
  LEFT JOIN ZZX_EMPENHO ZZX ON ZZX.ZZX_PROJET = AFA.AFA_PROJET AND AFA.AFC_XPROD = ZZX.ZZX_PRODUT
 WHERE AFA.AFA_PROJET IS NULL
-- ORDER BY ZZX_PROJET, ZZX_PRODUT
) TAB

-- 1. Zera a quantidade entrega dos produtos
UPDATE AFA010
   SET AFA_XQENTE = 0
 WHERE D_E_L_E_T_ = ' ';
 
-- 2. Aplica a nova quantidade
UPDATE AFA010
   SET AFA_XQENTE = ZZX.ZZX_QTDE
  FROM ZZX_EMPENHO ZZX
  JOIN AFA_EMPENHO AFA ON AFA.AFA_PROJET = ZZX.ZZX_PROJET AND AFA.AFC_XPROD = ZZX.ZZX_PRODUT AND AFA.AFA_PRODUT = ZZX.ZZX_COD
 WHERE AFA010.D_E_L_E_T_ = ' ' AND AFA010.R_E_C_N_O_ = AFA.AFA_RECNO;

-- 3. Itens em duplicidade dentro da celula
SELECT AFA_PROJET, AFC_XPROD, AFA_PRODUT, MIN(AEA.AEA_COD +'-'+ AEA.AEA_DESCRI) AS FASE
  FROM
(
SELECT AFA.AFA_PROJET, AFC.AFC_XPROD, AFA.AFA_PRODUT, AFA.R_E_C_N_O_ AS AFA_RECNO
  FROM AFA010 AFA
  JOIN AF9010 AF9 ON AF9.D_E_L_E_T_ = ' ' AND AF9.AF9_FILIAL = AFA.AFA_FILIAL AND AF9.AF9_PROJET = AFA.AFA_PROJET
   AND AF9.AF9_REVISA = AFA.AFA_REVISA AND AF9.AF9_TAREFA = AFA.AFA_TAREFA
  JOIN AFC010 AFC ON AFC.D_E_L_E_T_ = ' ' AND AFC.AFC_FILIAL = AFA.AFA_FILIAL AND AFC.AFC_PROJET = AFA.AFA_PROJET
   AND AFC.AFC_EDT = AF9.AF9_EDTPAI AND AFC.AFC_XPROD <> ''
 GROUP BY AFA.AFA_PROJET, AFC.AFC_XPROD, AFA.AFA_PRODUT, AFA.R_E_C_N_O_
) TAB
 JOIN AF8010 AF8 ON AF8.D_E_L_E_T_ = ' ' AND AF8_PROJET = TAB.AFA_PROJET 
 JOIN AEA010 AEA ON AEA.D_E_L_E_T_ = ' ' AND AEA.AEA_COD = AF8.AF8_FASE
 GROUP BY TAB.AFA_PROJET, TAB.AFC_XPROD, TAB.AFA_PRODUT
HAVING COUNT(*) > 1
 ORDER BY TAB.AFA_PROJET, TAB.AFC_XPROD, TAB.AFA_PRODUT;
 
-- 4. Requisição de itens não existentes
SELECT SUM(ZZX_QTDE)
  FROM
(  
SELECT ZZX.ZZX_NUM, ZZX_PROJET, ZZX_PRODUT, ZZX_COD, ZZX_QTDE, ZZX_DATA, ZZX_HORA, ZZX_REQUIS, ZZX_NUMREQ
  FROM ZZX010 ZZX
  LEFT JOIN AFA_EMPENHO AFA ON AFA.AFA_PROJET = ZZX.ZZX_PROJET AND AFA.AFC_XPROD = ZZX.ZZX_PRODUT AND AFA.AFA_PRODUT = ZZX.ZZX_COD
 WHERE ZZX.D_E_L_E_T_ = ' ' AND AFA.AFA_PROJET IS NULL
 ORDER BY ZZX.ZZX_NUM
) TAB;

SELECT AFC_PROJET 
  FROM AFC010
 WHERE D_E_L_E_T_ = ' ' AND AFC_XPROD <> ''
 GROUP BY AFC_PROJET 
HAVING COUNT(*) > 3 
 ORDER BY AFC_PROJET 