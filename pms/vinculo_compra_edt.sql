-- 1. Ajuste no preenchimento do campo C1_YNPI
ALTER TABLE SC1010 ADD C1_XPROJET VARCHAR(10);
UPDATE SC1010 SET C1_XPROJET = C1_YNPI;

-- A. Preenchimento do campo
UPDATE SC1010
   SET C1_YNPI = AF8.AF8_PROJET
  FROM
(
SELECT CASE WHEN RIGHT(RTRIM(LTRIM(SC1BKP.C1_YNPI)), 1) IN ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'O', 'S') 
        THEN LEFT(SC1BKP.C1_YNPI, LEN(SC1BKP.C1_YNPI) - 1) 
        ELSE RTRIM(LTRIM(SC1BKP.C1_YNPI)) END + 'A',
        AF8.AF8_PROJET, SC1.R_E_C_N_O_ AS RECNO
  FROM SC1010 SC1
  JOIN SC1xAF8_BKP SC1BKP ON SC1BKP.C1_NUM = SC1.C1_NUM AND SC1BKP.C1_ITEM = SC1.C1_ITEM
  JOIN AF8010 AF8 ON AF8.D_E_L_E_T_ = ' ' AND AF8.AF8_PROJET = 
   CASE WHEN RIGHT(RTRIM(LTRIM(SC1BKP.C1_YNPI)), 1) IN ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'O', 'S') 
        THEN LEFT(SC1BKP.C1_YNPI, LEN(SC1BKP.C1_YNPI) - 1) 
        ELSE RTRIM(LTRIM(SC1BKP.C1_YNPI)) END + 'A'
 WHERE SC1.D_E_L_E_T_ = ' ' AND SC1.C1_XPROJET = ''
   AND LEFT(SC1BKP.C1_YNPI, 3) IN ('ECO', 'MPS', 'PMD', 'PMP', 'PMR', 'PMS', 'PMY', 'TES')
   AND LEN(SC1BKP.C1_YNPI) > 3
) AF8
 WHERE SC1010.C1_YNPI = '' AND SC1010.R_E_C_N_O_ = AF8.RECNO;

-- B. Redireciona os invalidos
UPDATE SC1010
   SET C1_YNPI = AF8.AF8_PROJET
  FROM  
(  
SELECT AF8_N.AF8_PROJET, SC1.C1_NUM, SC1.C1_ITEM
  FROM SC1010 SC1
  LEFT JOIN AF8010 AF8 ON AF8.D_E_L_E_T_ = ' ' AND AF8.AF8_PROJET = SC1.C1_YNPI
  JOIN AF8010 AF8_N ON AF8_N.D_E_L_E_T_ = ' ' AND AF8_N.AF8_PROJET = 
   CASE WHEN RIGHT(RTRIM(LTRIM(SC1.C1_YNPI)), 1) IN ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'O', 'S') 
        THEN LEFT(SC1.C1_YNPI, LEN(SC1.C1_YNPI) - 1) 
        ELSE RTRIM(LTRIM(SC1.C1_YNPI)) END + 'A'
 WHERE SC1.D_E_L_E_T_ = ' ' AND SC1.C1_YNPI  <> '' AND AF8.AF8_PROJET IS NULL 
   AND AF8_N.AF8_PROJET <> ''
) AF8   
 WHERE SC1010.D_E_L_E_T_ = ' ' AND SC1010.C1_NUM = AF8.C1_NUM  AND SC1010.C1_ITEM = AF8.C1_ITEM;

-- C. Limpa os invalidos
UPDATE SC1010 SET C1_YNPI = 'PMS005412A' WHERE C1_YNPI = 'PMS0054/12'

UPDATE SC1010
   SET C1_YNPI = ''
 WHERE R_E_C_N_O_ IN (  
SELECT SC1.R_E_C_N_O_ 
  FROM SC1010 SC1
  LEFT JOIN AF8010 AF8 ON AF8.D_E_L_E_T_ = ' ' AND AF8.AF8_PROJET = SC1.C1_YNPI
 WHERE SC1.D_E_L_E_T_ = ' ' AND SC1.C1_YNPI  <> '' AND AF8.AF8_PROJET IS NULL 
); 

-- 2. Preenchimento do campo C1_XPROD
UPDATE SC1010
   SET C1_XPROD = COALESCE(SC1.AFC_XPROD, '')
  FROM (
SELECT SC1.C1_NUM, SC1.C1_ITEM, AFC.AFC_XPROD
  FROM SC1010 SC1
  LEFT JOIN SC1xAF8_BKP SC1BKP ON SC1BKP.D_E_L_E_T_ = ' ' AND SC1BKP.C1_NUM = SC1.C1_NUM
   AND SC1BKP.C1_ITEM = SC1.C1_ITEM
  JOIN AF8010 AF8 ON AF8.D_E_L_E_T_ = ' ' AND AF8.AF8_PROJET = SC1.C1_YNPI 
  LEFT JOIN (SELECT AFC_PROJET, AFC_XPROD, RIGHT(RTRIM(LTRIM(AFC_XPROD)), 1) AS LETRA
               FROM AFC010
              WHERE D_E_L_E_T_ = ' ' AND AFC_XPROD <> ''
              GROUP BY AFC_PROJET, AFC_XPROD) AFC ON AFC.AFC_PROJET = AF8.AF8_PROJET        
    AND AFC.LETRA = CASE WHEN SC1BKP.R_E_C_N_O_ IS NULL THEN 'A' ELSE
                    CASE WHEN RIGHT(RTRIM(LTRIM(SC1BKP.C1_YNPI)), 1) IN ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'O', 'S') 
                         THEN RIGHT(RTRIM(LTRIM(SC1BKP.C1_YNPI)), 1) ELSE 'A' END END
 WHERE SC1.D_E_L_E_T_ = ' ' AND LEN(SC1.C1_YNPI) > 3
) SC1
 WHERE SC1010.D_E_L_E_T_ = ' ' AND SC1010.C1_NUM = SC1.C1_NUM AND SC1010.C1_ITEM = SC1.C1_ITEM;

-- 3. Não preenchidos com conteudo anterior - Projetos
SELECT SC1BKP.C1_YNPI AS PROJETO FROM SC1010 SC1
  JOIN SC1xAF8_BKP SC1BKP ON SC1BKP.D_E_L_E_T_ = ' ' AND SC1BKP.C1_NUM = SC1.C1_NUM
   AND SC1BKP.C1_ITEM = SC1.C1_ITEM
 WHERE SC1.D_E_L_E_T_ = ' ' AND SC1.C1_YNPI = '' AND SC1BKP.C1_YNPI <> ''
 GROUP BY SC1BKP.C1_YNPI
 ORDER BY SC1BKP.C1_YNPI
 
-- 3. Não preenchidos com conteudo anterior - Detalhes
SELECT SC1BKP.C1_YNPI, SC1.C1_NUM, SC1.C1_ITEM, SC1.C1_PRODUTO, SC1.C1_EMISSAO, SC1.C1_DESCRI, SC1.C1_QUANT
  FROM SC1010 SC1
  JOIN SC1xAF8_BKP SC1BKP ON SC1BKP.D_E_L_E_T_ = ' ' AND SC1BKP.C1_NUM = SC1.C1_NUM
   AND SC1BKP.C1_ITEM = SC1.C1_ITEM
 WHERE SC1.D_E_L_E_T_ = ' ' AND SC1.C1_YNPI = '' AND SC1BKP.C1_YNPI <> '' 
 ORDER BY SC1.C1_NUM, SC1.C1_ITEM;

-- 4. Projetos com produtos não identificados - Projetos
 SELECT C1_YNPI
   FROM SC1010 
  WHERE D_E_L_E_T_ = ' ' AND C1_YNPI <> '' AND C1_XPROD = ''
  GROUP BY C1_YNPI  
  ORDER BY C1_YNPI;

-- 4. Projetos com produtos não identificados - Detalhes
 SELECT C1_YNPI, C1_NUM, C1_ITEM, C1_PRODUTO, C1_EMISSAO, C1_DESCRI, C1_QUANT 
   FROM SC1010 
  WHERE D_E_L_E_T_ = ' ' AND C1_YNPI <> '' AND C1_XPROD = ''
  ORDER BY C1_NUM, C1_ITEM;

-- 5. Preenchimento da EDT a partir do produto
UPDATE SC1010
   SET C1_XTSKPMS = AFC.AFC_EDT
  FROM
(  
SELECT AFC.AFC_EDT, SC1.R_E_C_N_O_
  FROM SC1010 SC1
  JOIN (SELECT AFC_PROJET, AFC_XPROD, MIN(AFC_EDT) AS AFC_EDT 
          FROM AFC010
         WHERE D_E_L_E_T_ = ' ' AND AFC_XPROD <> ''
         GROUP BY AFC_PROJET, AFC_XPROD) AFC ON AFC.AFC_PROJET = SC1.C1_YNPI 
    AND AFC.AFC_XPROD = SC1.C1_XPROD
 WHERE SC1.D_E_L_E_T_ = ' ' AND SC1.C1_XPROD <> ''
) AFC
 WHERE SC1010.D_E_L_E_T_ = ' ' AND SC1010.C1_XPROD <> '' AND SC1010.R_E_C_N_O_ = AFC.R_E_C_N_O_;
 
-- 5. Preenchimento da EDT a partir do produto
SELECT * INTO SC7010_BKP FROM SC7010;

UPDATE SC7010
   SET C7_YNPI = SC1.C1_YNPI, C7_XPROD = SC1.C1_XPROD, C7_XTSKPMS = SC1.C1_XTSKPMS
  FROM   
(  
SELECT SC1.C1_YNPI, SC1.C1_XPROD, SC1.C1_XTSKPMS, SC7.R_E_C_N_O_ 
  FROM SC7010 SC7
  JOIN SC1010 SC1 ON SC1.D_E_L_E_T_ = ' ' AND SC1.C1_NUM = SC7.C7_NUMSC AND SC1.C1_ITEM = SC7.C7_ITEMSC
 WHERE SC7.D_E_L_E_T_ = ' ' AND SC1.C1_YNPI <> ''
) SC1
 WHERE SC7010.D_E_L_E_T_ = ' ' AND SC7010.R_E_C_N_O_ =  SC1.R_E_C_N_O_;